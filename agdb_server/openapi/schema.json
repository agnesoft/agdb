{
  "openapi": "3.0.3",
  "info": {
    "title": "agdb_server",
    "description": "",
    "license": {
      "name": "Apache-2.0"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/admin/db/add": {
      "post": {
        "tags": [
          "crate::routes::admin::db"
        ],
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "db added"
          },
          "401": {
            "description": "unauthorized"
          },
          "465": {
            "description": "db already exists"
          },
          "467": {
            "description": "db invalid"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/db/delete": {
      "post": {
        "tags": [
          "crate::routes::admin::db"
        ],
        "operationId": "delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabaseName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "db deleted"
          },
          "401": {
            "description": "unauthorized"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/db/list": {
      "get": {
        "tags": [
          "crate::routes::admin::db"
        ],
        "operationId": "list",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServerDatabaseSize"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/db/remove": {
      "post": {
        "tags": [
          "crate::routes::admin::db"
        ],
        "operationId": "remove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabaseName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "db removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/db/user/add": {
      "post": {
        "tags": [
          "crate::routes::admin::db::user"
        ],
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDatabaseUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "user added"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "user must be a db admin / cannot add self"
          },
          "464": {
            "description": "user not found"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/db/user/list": {
      "get": {
        "tags": [
          "crate::routes::admin::db::user"
        ],
        "operationId": "list",
        "parameters": [
          {
            "name": "db",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/db/user/remove": {
      "post": {
        "tags": [
          "crate::routes::admin::db::user"
        ],
        "operationId": "remove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDbUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "user removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "cannot remove last admin user"
          },
          "464": {
            "description": "user not found"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/shutdown": {
      "get": {
        "tags": [
          "crate::routes::admin"
        ],
        "operationId": "shutdown",
        "responses": {
          "204": {
            "description": "server is shutting down"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/user/change_password": {
      "post": {
        "tags": [
          "crate::routes::admin::user"
        ],
        "operationId": "change_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "password changed"
          },
          "401": {
            "description": "unauthorized"
          },
          "461": {
            "description": "password too short (<8)"
          },
          "464": {
            "description": "user not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/user/create": {
      "post": {
        "tags": [
          "crate::routes::admin::user"
        ],
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "user created"
          },
          "401": {
            "description": "unauthorized"
          },
          "461": {
            "description": "password too short (<8)"
          },
          "462": {
            "description": "name too short (<3)"
          },
          "463": {
            "description": "user already exists"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/admin/user/list": {
      "get": {
        "tags": [
          "crate::routes::admin::user"
        ],
        "operationId": "list",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/add": {
      "post": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "db added"
          },
          "401": {
            "description": "unauthorized"
          },
          "465": {
            "description": "db already exists"
          },
          "467": {
            "description": "db invalid"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/delete": {
      "post": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabaseName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "db deleted"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "user must be a db owner"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/exec": {
      "post": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "exec",
        "parameters": [
          {
            "name": "db",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Queries"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueriesResults"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "permission denied"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/list": {
      "get": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "list",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServerDatabaseWithRole"
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/optimize": {
      "get": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "optimize",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerDatabaseSize"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "permission denied / must have write permissions"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/remove": {
      "post": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "remove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabaseName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "db removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "user must be a db owner"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/rename": {
      "post": {
        "tags": [
          "crate::routes::db"
        ],
        "operationId": "rename",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerDatabaseRename"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "db renamed"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "user must be a db admin"
          },
          "466": {
            "description": "db not found"
          },
          "467": {
            "description": "invalid db"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/user/add": {
      "post": {
        "tags": [
          "crate::routes::db::user"
        ],
        "operationId": "add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDatabaseUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "user added"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "user must be a db admin / cannot add self"
          },
          "464": {
            "description": "user not found"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/user/list": {
      "get": {
        "tags": [
          "crate::routes::db::user"
        ],
        "operationId": "list",
        "parameters": [
          {
            "name": "db",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/db/user/remove": {
      "post": {
        "tags": [
          "crate::routes::db::user"
        ],
        "operationId": "remove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDbUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "user removed"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "user must be a db admin / cannot remove last admin user"
          },
          "464": {
            "description": "user not found"
          },
          "466": {
            "description": "db not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/status": {
      "get": {
        "tags": [
          "crate::routes"
        ],
        "operationId": "status",
        "responses": {
          "200": {
            "description": "Server is ready"
          }
        }
      }
    },
    "/api/v1/user/change_password": {
      "post": {
        "tags": [
          "crate::routes::user"
        ],
        "operationId": "change_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "password changed"
          },
          "401": {
            "description": "invalid credentials"
          },
          "461": {
            "description": "password too short (<8)"
          },
          "464": {
            "description": "user not found"
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "crate::routes::user"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "login successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "invalid credentials"
          },
          "464": {
            "description": "user not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChangePassword": {
        "type": "object",
        "required": [
          "name",
          "password",
          "new_password"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "DbType": {
        "type": "string",
        "enum": [
          "memory",
          "mapped",
          "file"
        ]
      },
      "DbUser": {
        "type": "object",
        "required": [
          "database",
          "user",
          "role"
        ],
        "properties": {
          "database": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/DbUserRole"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "DbUserRole": {
        "type": "string",
        "enum": [
          "admin",
          "write",
          "read"
        ]
      },
      "Queries": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/QueryType"
        }
      },
      "QueriesResults": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/QueryResult"
        }
      },
      "RemoveDbUser": {
        "type": "object",
        "required": [
          "database",
          "user"
        ],
        "properties": {
          "database": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "ServerDatabase": {
        "type": "object",
        "required": [
          "name",
          "db_type"
        ],
        "properties": {
          "db_type": {
            "$ref": "#/components/schemas/DbType"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ServerDatabaseName": {
        "type": "object",
        "required": [
          "db"
        ],
        "properties": {
          "db": {
            "type": "string"
          }
        }
      },
      "ServerDatabaseRename": {
        "type": "object",
        "required": [
          "db",
          "new_name"
        ],
        "properties": {
          "db": {
            "type": "string"
          },
          "new_name": {
            "type": "string"
          }
        }
      },
      "ServerDatabaseSize": {
        "type": "object",
        "required": [
          "name",
          "db_type",
          "size"
        ],
        "properties": {
          "db_type": {
            "$ref": "#/components/schemas/DbType"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "ServerDatabaseWithRole": {
        "type": "object",
        "required": [
          "name",
          "db_type",
          "role",
          "size"
        ],
        "properties": {
          "db_type": {
            "$ref": "#/components/schemas/DbType"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/DbUserRole"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "UserCredentials": {
        "type": "object",
        "required": [
          "name",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserStatus": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}